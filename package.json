{
  "name": "meal-planner",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "aws:upload": "aws s3 cp .\\dist\\meal-planner\\ s3://fe-meal-planner --recursive",
    "aws:test": "jest ./aws",
    "aws:cdk": "cdk",
    "firebase:deploy": "firebase deploy",
    "deploy": "aws:upload && firebase deploy",
    "cz": "cz"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~12.2.0",
    "@angular/cdk": "12.2.13",
    "@angular/common": "~12.2.0",
    "@angular/compiler": "~12.2.0",
    "@angular/core": "~12.2.0",
    "@angular/fire": "7.2.0",
    "@angular/forms": "~12.2.0",
    "@angular/material": "12.2.13",
    "@angular/platform-browser": "~12.2.0",
    "@angular/platform-browser-dynamic": "~12.2.0",
    "@angular/router": "~12.2.0",
    "@ngrx/effects": "^12.5.1",
    "@ngrx/router-store": "^13.0.1",
    "@ngrx/store": "^12.5.1",
    "@ngrx/store-devtools": "^12.5.1",
    "@types/ramda": "^0.27.62",
    "date-fns": "^2.28.0",
    "firebase": "^9.4.0",
    "ramda": "^0.27.1",
    "rxfire": "^6.0.0",
    "rxjs": "~6.6.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~12.2.7",
    "@angular/cli": "~12.2.7",
    "@angular/compiler-cli": "~12.2.0",
    "@aws-cdk/assert": "1.124.0",
    "@aws-cdk/core": "1.124.0",
    "@types/jasmine": "~3.8.0",
    "@types/jest": "^27.4.0",
    "@types/node": "^12.11.1",
    "aws-cdk": "1.124.0",
    "commitizen": "^4.2.4",
    "cz-conventional-changelog": "^3.3.0",
    "jasmine-core": "~3.8.0",
    "jest": "^27.4.7",
    "jest-preset-angular": "^11.0.1",
    "source-map-support": "^0.5.16",
    "ts-jest": "^27.1.2",
    "ts-node": "^9.0.0",
    "typescript": "~4.3.5"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "jest": {
    "preset": "jest-preset-angular",
    "setupFilesAfterEnv": [
      "<rootDir>/setup-jest.ts"
    ],
    "transformIgnorePatterns": [
      "node_modules/(?!ramda)"
    ]
  }
}
